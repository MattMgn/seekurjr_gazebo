<?xml version="1.0"?>
<launch>

  # Start Gazebo with wg world running in (max) realtime
  <!--<include file="$(find hector_gazebo_worlds)/launch/rolling_landscape_120m.launch"/> -->
  <!-- <arg name="world" value="$(find hector_gazebo_worlds)/worlds/rolling_landscape_120m.world"/> -->
  <!--<arg name="world" default="worlds/empty.world"/>-->
  # Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable
  <!--<arg name="world" default="worlds/willow_garage.world"/>-->
  <!--<arg name="world" value="$(find hector_gazebo_worlds)/worlds/willow_garage_map.world"/>-->
  <!-- <arg name="world" default="worlds/willow_garage_map.world"/> -->
  <!--<arg name="world" default="$(find seekurjr_gazebo)/worlds/map.world"/>-->
  <!-- <arg name="world" default=""/> -->

	<arg name="robot" default="seekurjr" />
	<arg name="id" default="0" />
	<arg name="ctrl" default="false"/>
	<arg name="world" default="$(find seekurjr_gazebo)/worlds/map.world"/>
	<arg name="gui" default="true"/>
	<arg name="gzgui" default="true"/>

	<param name="/use_sim_time" value="true" />

	<node name="gazebo" pkg="gazebo_ros" type="gzserver" args="$(arg world)" respawn="false" output="screen"/>
	# Start gui
	<group unless="$(arg gzgui)">
		<node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
	</group>


  <!-- start gui -->
  <group if="$(arg gui)">
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find seekurjr_gazebo)/exp_gz_seekurjr_of.rviz"/>
  </group>


   <arg name="tf_prefix" default="seekurjr"/> 
   <arg name="name" default="seekurjr"/>
   <arg name="model" default="$(find seekurjr_gazebo)/urdf/$(arg name).xacro.xml"/>

   <arg name="x" default="10.0"/>
   <arg name="y" default="10.0"/>
   <arg name="z" default="0.2"/>


   <param name="seekurjr_description" command="$(find xacro)/xacro.py '$(arg model)'" />

   <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />


	<node name="spawn_seekurjr" pkg="gazebo_ros" type="spawn_model" 
		args="-param seekurjr_description
		-urdf 
		-x $(arg x)
		-y $(arg y)
		-z $(arg z)
		-model $(arg name)
		-robot_namespace $(arg tf_prefix)"
	respawn="false" output="screen"/>

	<node name="seekurjr_joint_sp" pkg="seekurjr_joint_state_publisher" type="seekurjr_joint_state_publisher">
		<remap from="robot_description" to="seekurjr_description" />
		<param name="queue_size" type="int" value="100" />
		<param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
	</node>

<!--
   <node pkg="robot_state_publisher" type="robot_state_publisher" name="seekurjr_sp" output="screen" >
   	 <remap from="robot_description" to="seekurjr_description" />
     <param name="publish_frequency" type="double" value="50.0" />
     <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />
   </node>
-->

  <!-- Spawn simulated seekurjr -->
  <!--
  	<include file="$(find seekurjr_gazebo)/launch/spawn_model.launch" >
	  	<arg name="tf_prefix" value="$(arg tf_prefix)" /> 
		<arg name="x" default="0.0"/>
		<arg name="y" default="0.0"/>
		<arg name="z" default="0.2"/>
		<arg name="model" default="$(find seekurjr_gazebo)/urdf/seekurjr.xacro.xml"/>
		<arg name="name" default="seekurjr"/>
    </include>  
-->
<!--
		<include file="$(find seekurjr_gazebo)/launch/stereocore.launch">
			<arg name="tf_prefix" value="$(arg tf_prefix)" />
	    </include> 
	    
		<include file="$(find seekurjr_gazebo)/launch/laser.launch">
			<arg name="tf_prefix" value="$(arg tf_prefix)" />
	    </include> 
-->	
		<!-- conflict with EKF -->
		<!--
		<include file="$(find seekurjr_gazebo)/launch/imu.launch"/>
		-->
<!--		
		<include file="$(find seekurjr_gazebo)/launch/pcl_conv.launch">
			<arg name="tf_prefix" value="$(arg tf_prefix)" />
	    </include> 
		
		<include file="$(find seekurjr_gazebo)/launch/octomap_server.launch">
			<arg name="tf_prefix" value="$(arg tf_prefix)" />
	    </include> 
-->		
		<!-- robot_pose_ekf slam node -->
		<!--
		<include file="$(find seekurjr_gazebo)/launch/robot_pose_ekf.launch">
			<arg name="tf_prefix" value="$(arg tf_prefix)" />
	    </include> 
	  -->
	  <group if="$(arg ctrl)">
	  	<include file="$(find seekurjr_control)/launch/trajectory.launch"/>
	  </group>
	  
	  <include file="$(find seekurjr_control)/launch/teleop.launch">
	  	<arg name="id" value="$(arg id)" />
	  	<arg name="cmd_vel" value="/$(arg robot)/cmd_vel"/>
	  </include>
		
		<!--
		<include file="$(find seekurjr_control)/launch/steering.launch"/>
		-->
		<!--
		<include file="$(find seekurjr_run)/launch/rqt_imu.launch"/>
		-->
		<!--
		<include file="$(find seekurjr_run)/launch/record_experiment.launch"/>
		-->

<!--
<node name="usercam_tracker" pkg="kv_tools" type="usercam_trackmodel.py" respawn="true" output="screen">
</node>
-->

<!--
# Frontal camera
<node pkg="optical_flow" name="eagleF_of" type="of_cpu_farneback_nd" output="screen" respawn="true" clear_params="true">
    <rosparam file="$(find optical_flow)/launch/farn_parameters.yaml" command="load" ns = "/" />
    <remap from="in" to="/seekurjr/eagleF/left/image_raw"/>
    <remap from="out" to="/eagleF/of/out"/>
    <remap from="opt_flow" to="/seekurjr/eagleF/of/odom"/>
</node>

<node pkg="optical_flow"  name="raw_flow_to_odom" type="raw_flow_to_odom_nd"  output="screen" respawn="true" clear_params="true">
    <remap from="opt_flow" to="/seekurjr/eagleF/of/odom"/>
</node>

# Left camera
<node pkg="optical_flow" name="eagleL_of" type="of_cpu_farneback_nd" output="screen" respawn="true" clear_params="true">
    <rosparam file="$(find optical_flow)/launch/farn_parameters.yaml" command="load" ns = "/" />
    <remap from="in" to="/seekurjr/eagleL/left/image_raw"/>
    <remap from="out" to="/eagleL/of/out"/>
    <remap from="opt_flow" to="/seekurjr/eagleL/of/odom"/>
</node>

# Right camera
<node pkg="optical_flow" name="eagleR_of" type="of_cpu_farneback_nd" output="screen" respawn="true" clear_params="true">
    <rosparam file="$(find optical_flow)/launch/farn_parameters.yaml" command="load" ns = "/" />
    <remap from="in" to="/seekurjr/eagleR/left/image_raw"/>
    <remap from="out" to="/eagleR/of/out"/>
    <remap from="opt_flow" to="/seekurjr/eagleR/of/odom"/>
</node>
-->

</launch>
