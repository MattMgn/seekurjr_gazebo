<?xml version="1.0"?>
<robot name="seekurjr" 

       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:gazebo="http://playerstage.sourceforge.net/gazebo/xmlschema/#gz"
       xmlns:model="http://playerstage.sourceforge.net/gazebo/xmlschema/#model"
       xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:body="http://playerstage.sourceforge.net/gazebo/xmlschema/#body"
       xmlns:geom="http://playerstage.sourceforge.net/gazebo/xmlschema/#geom"
       xmlns:joint="http://playerstage.sourceforge.net/gazebo/xmlschema/#joint"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       xmlns:rendering="http://playerstage.sourceforge.net/gazebo/xmlschema/#rendering"
       xmlns:renderable="http://playerstage.sourceforge.net/gazebo/xmlschema/#renderable"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:physics="http://playerstage.sourceforge.net/gazebo/xmlschema/#physics">

  <!-- BASE FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,navigation stack depends on this frame -->


  <!-- BASE_LINK (RED) -->
  <link name="base_link">

    <inertial>
      <mass value="70.0" />
      <origin xyz="0 0 0.01" />
      <inertia  ixx="7.8864" ixy="0"  ixz="0"  iyy="10.5430"  iyz="0"  izz="5.5721" />
    </inertial>

    <visual>
       <origin xyz="0 0 0" rpy="1.57 0 0" />
       <geometry>
	 <mesh filename="package://seekurjr_gazebo/meshes/seekurjr_body_new_low.stl" scale="0.001 0.001 0.001"/>
       </geometry>
    </visual>

    <collision>
       <origin xyz="0 0 0" rpy="1.57 0 0" />
       <geometry>
         <mesh filename="package://seekurjr_gazebo/meshes/seekurjr_body_new_low.stl" scale="0.001 0.001 0.001"/>
       </geometry>
    </collision>     


  </link>

  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
<!--
http://answers.ros.org/question/30539/choosing-the-right-coefficients-for-gazebo-simulation/

http://wiki.ros.org/urdf/Tutorials/Adding%20Physical%20and%20Collision%20Properties%20to%20a%20URDF%20Model


http://answers.gazebosim.org/question/4372/the-inertia-matrix-explained/

Meshlab: seekurjr_body_new_low.stl
Mesh Volume is 155760256.000000
Mesh Surface is 4038439.750000
Thin shell barycenter 8.409724 247.537674 -3.138560
Center of Mass is 6.480556 131.015488 -45.919720
Inertia Tensor is :
| 11264990380032.000000 -130955894784.000000 -315909963776.000000 |
| -130955894784.000000 11355918696448.000000 -769257701376.000000 |
| -315909963776.000000 -769257701376.000000 5312563118080.000000 |
Principal axes are :
| 0.916011 -0.397463 0.054284 |
| 0.388693 0.912860 0.124917 |
| -0.099203 -0.093326 0.990681 |
axis momenta are :
| 11243634032640.000000 11491582410752.000000 5198255751168.000000 |
-->

<!-- BAMPER -->
<!--
<gazebo>
  <plugin name="${name}_gazebo_ros_bumper_controller" filename="libgazebo_ros_bumper.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>${update_rate}</updateRate>
    <bumperTopicName>${name}_bumper</bumperTopicName>
    <frameName>world</frameName>
  </plugin>
</gazebo>
-->

<!-- SKID-STEERING CONTROLLER -->

<!-- 
http://answers.ros.org/question/61712/how-to-use-libgazebo_ros_cameraso-in-gazebo-urdf/
-->

<!--
<gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>100.0</updateRate>
    <robotNamespace>/</robotNamespace>
    <leftFrontJoint>front_left_wheel_joint</leftFrontJoint>
    <rightFrontJoint>front_right_wheel_joint</rightFrontJoint>
    <leftRearJoint>back_left_wheel_joint</leftRearJoint>
    <rightRearJoint>back_right_wheel_joint</rightRearJoint>
    <wheelSeparation>0.4</wheelSeparation>
    <wheelDiameter>0.215</wheelDiameter>
    <robotBaseFrame>base_link</robotBaseFrame>
    <torque>20</torque>
    <topicName>cmd_vel</topicName>
    <broadcastTF>false</broadcastTF>
  </plugin>
</gazebo>
<gazebo>
  <plugin name="SkidSteerDrivePlugin" filename="libSkidSteerDrivePlugin.so">
      <right_front>p3at_front_right_wheel_joint</right_front>
      <right_rear>p3at_back_right_wheel_joint</right_rear>
      <left_front>p3at_front_left_wheel_joint</left_front>
      <left_rear>p3at_back_left_wheel_joint</left_rear>
      <max_force>5.0</max_force>
  </plugin>
</gazebo>
-->

<!-- IMU -->

<!--
  <gazebo reference="imu_link">
    
    
    <sensor name="imu_sensor" type="imu">
      <always_on>1</always_on>
      <update_rate>1000.0</update_rate>
      <imu>
        <noise>
          <type>gaussian</type>
          
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </sensor>
  </gazebo>
-->

<!--
http://answers.ros.org/question/12430/modelling-sensorsimu-in-gazebo/
-->

<!--
 <joint name="imu_joint" type="fixed">
    <axis xyz="1 0 0"/> 
    <origin xyz="0 0 0.19"/>
    <parent link="base_link"/>
    <child link="imu_link"/> 
 </joint>
-->

<!--
<link name="imu_link">
  <inertial>
    <mass value="0.001"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
  </inertial>
  <visual>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <geometry>
      <box size="0.001 0.001 0.001"/>
    </geometry>
  </visual>
  <collision>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <geometry>
      <box size=".001 .001 .001"/>
    </geometry>
  </collision>
</link>
-->

<!--
<gazebo>
  <controller:gazebo_ros_imu name="imu_controller" plugin="libgazebo_ros_imu.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>50.0</updateRate> 
    <bodyName>imu_link</bodyName>
    <topicName>imu_data</topicName>
    <gaussianNoise>2.89e-08</gaussianNoise>
    <xyzOffsets>0 0 0</xyzOffsets>
    <rpyOffsets>0 0 0</rpyOffsets>
    <interface:position name="imu_position"/>
  </controller:gazebo_ros_imu>
</gazebo>
-->


<!-- LASER -->
 
<!--
    http://gazebosim.org/wiki/Tutorials/1.9/ROS_Motor_and_Sensor_Plugins
-->

<sensor type="ray" name="head_hokuyo_sensor">
<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">


<!-- STEREOCAM -->

<!--
http://answers.ros.org/question/61712/how-to-use-libgazebo_ros_cameraso-in-gazebo-urdf/
-->

